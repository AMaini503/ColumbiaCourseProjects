 - 3 table design for Person, Student, Faculty
   - create 3 tables viz. Person, Student, Faculty
   - create 2 views StudentAll, FacultyAll by joining Person 
     with Student and Person with Faculty respectively.
 - Scheduling conflict

 - What you actually need to submit is the same: user stories,    DDL, sample queries and an explanatory document.
 - Just the DDL, functions, procedures, triggers and views.
 
- procedure to insert person & (student or faculty)
- views StudentAll, FacultyAll (JOIN base and derived tables)
- 6 procedures for insert, update and delete for both student 		and faculty.

- Add table Student, Faculty


-----------------------------------------------------------------
Implementation changes

Person
------
* Add attributes email, last_name, first_name
* Write generate_uni function for Person table

Student
--------
* add foreign key for school

Faculty
--------
* add foreign key for department

generate last_name, first_name, email from data generator
#people = 250

Number of students = 200
13 department, minimum 10 students per department
year in [1990, 2017]

Number of faculty = 50
13 departments, minimum 3 faculty per department
title in [Assistant Prof, Adjunct Professor, Senior Prof]

* make sure enrollment_limit >= 10 and  <= 100, trigger on sections



1) Screen shots of the DDLs for Person, Student, Faculty
2) Screen shots of the views StudentAll, FacultyAll
3) Screen shot of a procedure for creating a Person that also generates a UNI
4) Screen shot of a trigger that ensures section enrollment does not exceed limit (should we choose a limit?)
5) Screen shot of a trigger that ensures students don't enroll in a class that they haven't taken the prereqs for
6) Screen shot of a trigger that ensures faculty aren't teaching more than 3 classes a semester
7) Screen shot of views CoursesTaken and CoursesTaught

ANTHBC4664
year 1993
1. ANTHBC6633 (leaf) 00043
2. ANTHF4356 (leaf) 00256
3. ANTHC1571 (2.)